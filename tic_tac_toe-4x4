def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 16)

def check_winner(board):
    # Check rows, columns, and diagonals for a win
    for i in range(3):
        if board[i][0] == board[i][1] == board[i][2] == board[i][3]!= " ":
            return board[i][0]
        if board[0][i] == board[1][i] == board[2][i] == board[3][i]!= " ":
            return board[0][i]
    
    if board[0][0] == board[1][1] == board[2][2] == board[3][3]!= " ":
        return board[0][0]
    if board[0][3] == board[1][1] == board[2][2]== board[3][0] != " ":
        return board[0][2]
    
    return None

def is_board_full(board):
    return all(cell != " " for row in board for cell in row)

def tic_tac_toe():
    board = [[" " for _ in range(4)] for _ in range(4)]
    current_player = "X"

    while True:
        print_board(board)
        print(f"Player {current_player}, enter your move (row and column): ")
        
        try:
            row, col = map(int, input().split())
            if board[row][col] != " ":
                print("Cell already taken! Try again.")
                continue
        except (ValueError, IndexError):
            print("Invalid input! Please enter row and column as two numbers (0, 1, 2, or 3).")
            continue
        
        board[row][col] = current_player
        
        winner = check_winner(board)
        if winner:
            print_board(board)
            print(f"Player {winner} wins!")
            break
        
        if is_board_full(board):
            print_board(board)
            print("It's a draw!")
            break
        
        current_player = "O" if current_player == "X" else "X"

if __name__ == "__main__":
    tic_tac_toe()
